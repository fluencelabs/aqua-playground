/**
 *
 * This file is auto-generated. Do not edit manually: changes may be erased.
 * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
 * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
 * Aqua version: 0.3.2-SNAPSHOT
 *
 */
import { Fluence, FluencePeer } from '@fluencelabs/fluence';
import { CallParams, callFunction, registerService } from '@fluencelabs/fluence/dist/internal/compilerSupport/v2';

function missingFields(obj: any, fields: string[]): string[] {
    return fields.filter((f) => !(f in obj));
}

// Services

export interface CustomIdDef {
    id: (s: string, callParams: CallParams<'s'>) => string;
}
export function registerCustomId(service: CustomIdDef): void;
export function registerCustomId(serviceId: string, service: CustomIdDef): void;
export function registerCustomId(peer: FluencePeer, service: CustomIdDef): void;
export function registerCustomId(peer: FluencePeer, serviceId: string, service: CustomIdDef): void;

export function registerCustomId(...args: any) {
    registerService(args, {
        defaultServiceId: 'cid',
        functions: [
            {
                functionName: 'id',
                argDefs: [
                    {
                        name: 'arg0',
                        isOptional: false,
                        callbackDef: null,
                    },
                ],
                returnType: {
                    isVoid: false,
                    isOptional: false,
                },
            },
        ],
    });
}

// Functions

export type ViaArrResult = { external_addresses: string[] };
export function viaArr(node_id: string, viaAr: string[], config?: { ttl?: number }): Promise<ViaArrResult>;
export function viaArr(
    peer: FluencePeer,
    node_id: string,
    viaAr: string[],
    config?: { ttl?: number },
): Promise<ViaArrResult>;
export function viaArr(...args: any) {
    let script = `
                        (xor
                     (seq
                      (seq
                       (seq
                        (seq
                         (seq
                          (seq
                           (seq
                            (seq
                             (call %init_peer_id% ("getDataSrv" "-relay-") [] -relay-)
                             (call %init_peer_id% ("getDataSrv" "node_id") [] node_id)
                            )
                            (call %init_peer_id% ("getDataSrv" "viaAr") [] viaAr)
                           )
                           (call -relay- ("op" "noop") [])
                          )
                          (fold viaAr -via-peer-
                           (seq
                            (call -via-peer- ("op" "noop") [])
                            (next -via-peer-)
                           )
                          )
                         )
                         (xor
                          (call node_id ("peer" "identify") [] p)
                          (seq
                           (seq
                            (seq
                             (fold viaAr -via-peer-
                              (seq
                               (call -via-peer- ("op" "noop") [])
                               (next -via-peer-)
                              )
                             )
                             (call -relay- ("op" "noop") [])
                            )
                            (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 1])
                           )
                           (call -relay- ("op" "noop") [])
                          )
                         )
                        )
                        (fold viaAr -via-peer-
                         (seq
                          (call -via-peer- ("op" "noop") [])
                          (next -via-peer-)
                         )
                        )
                       )
                       (call -relay- ("op" "noop") [])
                      )
                      (xor
                       (call %init_peer_id% ("callbackSrv" "response") [p])
                       (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 2])
                      )
                     )
                     (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 3])
                    )
    `;
    return callFunction(
        args,
        {
            functionName: 'viaArr',
            returnType: {
                isVoid: false,
                isOptional: false,
            },
            argDefs: [
                {
                    name: 'node_id',
                    isOptional: false,
                    callbackDef: null,
                },
                {
                    name: 'viaAr',
                    isOptional: false,
                    callbackDef: null,
                },
            ],
            names: {
                relay: '-relay-',
                getDataSrv: 'getDataSrv',
                callbackSrv: 'callbackSrv',
                responseSrv: 'callbackSrv',
                responseFnName: 'response',
                errorHandlingSrv: 'errorHandlingSrv',
                errorFnName: 'error',
            },
        },
        script,
    );
}

export type ViaStreamResult = { external_addresses: string[] };
export function viaStream(node_id: string, viaStr: string[], config?: { ttl?: number }): Promise<ViaStreamResult>;
export function viaStream(
    peer: FluencePeer,
    node_id: string,
    viaStr: string[],
    config?: { ttl?: number },
): Promise<ViaStreamResult>;
export function viaStream(...args: any) {
    let script = `
                        (xor
                     (seq
                      (seq
                       (seq
                        (seq
                         (seq
                          (seq
                           (seq
                            (seq
                             (seq
                              (call %init_peer_id% ("getDataSrv" "-relay-") [] -relay-)
                              (call %init_peer_id% ("getDataSrv" "node_id") [] node_id)
                             )
                             (call %init_peer_id% ("getDataSrv" "viaStr") [] viaStr-iter)
                            )
                            (fold viaStr-iter viaStr-item
                             (seq
                              (ap viaStr-item $viaStr)
                              (next viaStr-item)
                             )
                            )
                           )
                           (call -relay- ("op" "noop") [])
                          )
                          (fold $viaStr -via-peer-
                           (seq
                            (call -via-peer- ("op" "noop") [])
                            (next -via-peer-)
                           )
                          )
                         )
                         (xor
                          (call node_id ("peer" "identify") [] p)
                          (seq
                           (seq
                            (seq
                             (fold $viaStr -via-peer-
                              (seq
                               (call -via-peer- ("op" "noop") [])
                               (next -via-peer-)
                              )
                             )
                             (call -relay- ("op" "noop") [])
                            )
                            (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 1])
                           )
                           (call -relay- ("op" "noop") [])
                          )
                         )
                        )
                        (fold $viaStr -via-peer-
                         (seq
                          (call -via-peer- ("op" "noop") [])
                          (next -via-peer-)
                         )
                        )
                       )
                       (call -relay- ("op" "noop") [])
                      )
                      (xor
                       (call %init_peer_id% ("callbackSrv" "response") [p])
                       (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 2])
                      )
                     )
                     (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 3])
                    )
    `;
    return callFunction(
        args,
        {
            functionName: 'viaStream',
            returnType: {
                isVoid: false,
                isOptional: false,
            },
            argDefs: [
                {
                    name: 'node_id',
                    isOptional: false,
                    callbackDef: null,
                },
                {
                    name: 'viaStr',
                    isOptional: false,
                    callbackDef: null,
                },
            ],
            names: {
                relay: '-relay-',
                getDataSrv: 'getDataSrv',
                callbackSrv: 'callbackSrv',
                responseSrv: 'callbackSrv',
                responseFnName: 'response',
                errorHandlingSrv: 'errorHandlingSrv',
                errorFnName: 'error',
            },
        },
        script,
    );
}

export type ViaOptResult = { external_addresses: string[] };
export function viaOpt(
    relay: string,
    node_id: string,
    viaOpt: string | null,
    config?: { ttl?: number },
): Promise<ViaOptResult>;
export function viaOpt(
    peer: FluencePeer,
    relay: string,
    node_id: string,
    viaOpt: string | null,
    config?: { ttl?: number },
): Promise<ViaOptResult>;
export function viaOpt(...args: any) {
    let script = `
                        (xor
                     (seq
                      (seq
                       (seq
                        (seq
                         (seq
                          (seq
                           (seq
                            (seq
                             (seq
                              (call %init_peer_id% ("getDataSrv" "-relay-") [] -relay-)
                              (call %init_peer_id% ("getDataSrv" "relay") [] relay)
                             )
                             (call %init_peer_id% ("getDataSrv" "node_id") [] node_id)
                            )
                            (call %init_peer_id% ("getDataSrv" "viaOpt") [] viaOpt)
                           )
                           (call -relay- ("op" "noop") [])
                          )
                          (fold viaOpt -via-peer-
                           (seq
                            (call -via-peer- ("op" "noop") [])
                            (next -via-peer-)
                           )
                          )
                         )
                         (xor
                          (call node_id ("peer" "identify") [] p)
                          (seq
                           (seq
                            (seq
                             (fold viaOpt -via-peer-
                              (seq
                               (call -via-peer- ("op" "noop") [])
                               (next -via-peer-)
                              )
                             )
                             (call -relay- ("op" "noop") [])
                            )
                            (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 1])
                           )
                           (call -relay- ("op" "noop") [])
                          )
                         )
                        )
                        (fold viaOpt -via-peer-
                         (seq
                          (call -via-peer- ("op" "noop") [])
                          (next -via-peer-)
                         )
                        )
                       )
                       (call -relay- ("op" "noop") [])
                      )
                      (xor
                       (call %init_peer_id% ("callbackSrv" "response") [p])
                       (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 2])
                      )
                     )
                     (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 3])
                    )
    `;
    return callFunction(
        args,
        {
            functionName: 'viaOpt',
            returnType: {
                isVoid: false,
                isOptional: false,
            },
            argDefs: [
                {
                    name: 'relay',
                    isOptional: false,
                    callbackDef: null,
                },
                {
                    name: 'node_id',
                    isOptional: false,
                    callbackDef: null,
                },
                {
                    name: 'viaOpt',
                    isOptional: true,
                    callbackDef: null,
                },
            ],
            names: {
                relay: '-relay-',
                getDataSrv: 'getDataSrv',
                callbackSrv: 'callbackSrv',
                responseSrv: 'callbackSrv',
                responseFnName: 'response',
                errorHandlingSrv: 'errorHandlingSrv',
                errorFnName: 'error',
            },
        },
        script,
    );
}
