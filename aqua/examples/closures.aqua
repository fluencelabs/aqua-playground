module Closure declares *

import "@fluencelabs/aqua-lib/builtin.aqua"

export LocalSrv, closureIn, closureOut

service MyOp("op"):
  identity(s: string) -> string

service LocalSrv("local_srv"):
  inside: -> ()

func closureIn(peer1: string) -> string:
  variable = "const"
  co on peer1:
    p1Id <- MyOp.identity("co on")
  closure = (s: string) -> string:
    if s == "in":
        LocalSrv.inside()
    p2Id <- MyOp.identity(s)
    <- p2Id
  p <- closure("in")
  <- p

func closureOut(peer2: string) -> Info:
  closure = (s: string) -> Info:
    if s == "in":
        LocalSrv.inside()
    p2Id <- Peer.identify()
    <- p2Id
  on peer2:
    p2Id <- closure("on")
  <- p2Id